import { Pipe, effect, inject } from '@angular/core';
import { TranslationService } from './translation.service';
import * as i0 from "@angular/core";
export class TranslationPipe {
    constructor() {
        this.translationService = inject(TranslationService);
        this.translatedText = ''; // Armazena a tradução atual
        this.currentKey = ''; // Variável para armazenar a chave atual
        // Recalcula a tradução sempre que o idioma mudar
        effect(() => {
            const lang = this.translationService.currentLanguage(); // Observa o Signal
            this.translatedText = this.translationService.instant(this.currentKey);
        });
    }
    transform(key) {
        // Atualizamos a chave de tradução atual
        this.currentKey = key;
        // Obtém a tradução atual
        return this.translationService.instant(key);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TranslationPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "18.2.9", ngImport: i0, type: TranslationPipe, isStandalone: true, name: "translate", pure: false }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.9", ngImport: i0, type: TranslationPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'translate',
                    standalone: true,
                    pure: false
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24ucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NoYXJlZC11dGlscy9zcmMvbGliL3RyYW5zbGF0aW9uL3RyYW5zbGF0aW9uLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFPM0QsTUFBTSxPQUFPLGVBQWU7SUFLMUI7UUFIUSx1QkFBa0IsR0FBRyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNoRCxtQkFBYyxHQUFHLEVBQUUsQ0FBQyxDQUFDLDRCQUE0QjtRQVVqRCxlQUFVLEdBQVcsRUFBRSxDQUFDLENBQUMsd0NBQXdDO1FBUHZFLGlEQUFpRDtRQUNqRCxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ1YsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUMsbUJBQW1CO1lBQzNFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDekUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBSUQsU0FBUyxDQUFDLEdBQVc7UUFDbkIsd0NBQXdDO1FBQ3hDLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUMsQ0FBQzs4R0FwQlUsZUFBZTs0R0FBZixlQUFlOzsyRkFBZixlQUFlO2tCQUwzQixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxXQUFXO29CQUNqQixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFLEtBQUs7aUJBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBlZmZlY3QsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICcuL3RyYW5zbGF0aW9uLnNlcnZpY2UnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICd0cmFuc2xhdGUnLFxyXG4gIHN0YW5kYWxvbmU6IHRydWUsXHJcbiAgcHVyZTogZmFsc2VcclxufSlcclxuZXhwb3J0IGNsYXNzIFRyYW5zbGF0aW9uUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICBwcml2YXRlIHRyYW5zbGF0aW9uU2VydmljZSA9IGluamVjdChUcmFuc2xhdGlvblNlcnZpY2UpO1xyXG4gIHByaXZhdGUgdHJhbnNsYXRlZFRleHQgPSAnJzsgLy8gQXJtYXplbmEgYSB0cmFkdcOnw6NvIGF0dWFsXHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgLy8gUmVjYWxjdWxhIGEgdHJhZHXDp8OjbyBzZW1wcmUgcXVlIG8gaWRpb21hIG11ZGFyXHJcbiAgICBlZmZlY3QoKCkgPT4ge1xyXG4gICAgICBjb25zdCBsYW5nID0gdGhpcy50cmFuc2xhdGlvblNlcnZpY2UuY3VycmVudExhbmd1YWdlKCk7IC8vIE9ic2VydmEgbyBTaWduYWxcclxuICAgICAgdGhpcy50cmFuc2xhdGVkVGV4dCA9IHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLmluc3RhbnQodGhpcy5jdXJyZW50S2V5KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjdXJyZW50S2V5OiBzdHJpbmcgPSAnJzsgLy8gVmFyacOhdmVsIHBhcmEgYXJtYXplbmFyIGEgY2hhdmUgYXR1YWxcclxuXHJcbiAgdHJhbnNmb3JtKGtleTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIC8vIEF0dWFsaXphbW9zIGEgY2hhdmUgZGUgdHJhZHXDp8OjbyBhdHVhbFxyXG4gICAgdGhpcy5jdXJyZW50S2V5ID0ga2V5O1xyXG4gICAgLy8gT2J0w6ltIGEgdHJhZHXDp8OjbyBhdHVhbFxyXG4gICAgcmV0dXJuIHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLmluc3RhbnQoa2V5KTtcclxuICB9XHJcbn1cclxuIl19