{"version":3,"file":"angulartoolsdr-shared-utils.mjs","sources":["../../../projects/shared-utils/src/lib/mask/mask.ts","../../../projects/shared-utils/src/lib/pipes/cpf-cnpj-format.pipe.ts","../../../projects/shared-utils/src/lib/pipes/date-format.pipe.ts","../../../projects/shared-utils/src/lib/pipes/replace-null-with-text.pipe.ts","../../../projects/shared-utils/src/lib/pipes/safe.pipe.ts","../../../projects/shared-utils/src/lib/pipes/utcDate.pipe.ts","../../../projects/shared-utils/src/lib/services/alert.service.ts","../../../projects/shared-utils/src/lib/directives/slimscroll.directive.ts","../../../projects/shared-utils/src/lib/translation/translation.service.ts","../../../projects/shared-utils/src/lib/translation/translation.pipe.ts","../../../projects/shared-utils/src/public-api.ts","../../../projects/shared-utils/src/angulartoolsdr-shared-utils.ts"],"sourcesContent":["export class Mask {\r\n\r\n  static LANG_PT = 'pt-BR';\r\n  static LANG_EN = 'en-US';\r\n  static LANG_ES = 'es-ES';\r\n\r\n  static getMaskCnpj(): any {\r\n    const mask = {\r\n        mask: '00.000.000/0000-00',\r\n        lazy: false,\r\n        placeholderChar: ' '\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getMaskCpf(): any {\r\n    const mask = {\r\n        mask: '000.000.000-00',\r\n        lazy: false,\r\n        placeholderChar: ' '\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getMaskCep(): any {\r\n    const mask = {\r\n        mask: '00000-000',\r\n        lazy: false,\r\n        placeholderChar: '_'\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getImaskCurrency(scale: number = 2, currencyCode: string = 'BRL'): any {\r\n    const mask = {\r\n        mask: Number,\r\n        scale: scale,\r\n        thousandsSeparator: currencyCode === 'BRL' ? '.' : ',',\r\n        padFractionalZeros: true,\r\n        normalizeZeros: true,\r\n        radix: currencyCode === 'BRL' ? ',' : '.',\r\n        signed: true\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getImaskNumber(language, scale?: number, signed?: boolean): any {\r\n    const radix = (scale === 0 ? ' ' : ',');\r\n    if (scale === undefined) {\r\n        scale = 2;\r\n    }\r\n    const mask = {\r\n        mask: Number,\r\n        scale: scale,\r\n        thousandsSeparator: '.',\r\n        padFractionalZeros: true,\r\n        normalizeZeros: true,\r\n        signed: signed,\r\n        radix: radix\r\n    };\r\n    switch (language) {\r\n        case Mask.LANG_PT:\r\n        case Mask.LANG_ES:\r\n            break;\r\n        case Mask.LANG_EN:\r\n            mask.thousandsSeparator = ',',\r\n            mask.radix = '.';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return mask;\r\n}\r\n\r\n  static getImaskNumberBigDecimal(): any {\r\n    const mask = {\r\n        mask: Number,\r\n        scale: 6,\r\n        thousandsSeparator: '.',\r\n        padFractionalZeros: false,\r\n        normalizeZeros: false,\r\n        radix: ',',\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getImaskLatitudeNumber(): any {\r\n    const mask = {\r\n        mask: Number,\r\n        scale: 8,\r\n        signed: true,\r\n        thousandsSeparator: '.',\r\n        padFractionalZeros: true,\r\n        normalizeZeros: true,\r\n        radix: ',',\r\n        min: -99,\r\n        max: 99\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getImaskLongitudeNumber(): any {\r\n    const mask = {\r\n        mask: Number,\r\n        scale: 8,\r\n        signed: true,\r\n        thousandsSeparator: '.',\r\n        padFractionalZeros: true,\r\n        normalizeZeros: true,\r\n        radix: ',',\r\n        min: -999,\r\n        max: 999\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getImaskTCelPhone(language): any {\r\n      const mask = {\r\n          mask: '(00) 0 0000-0000',\r\n          lazy: false,\r\n          placeholderChar: ' '\r\n      };\r\n      return mask;\r\n  }\r\n\r\n  static getImaskTCelPhoneSemDDD(language): any {\r\n    const mask = {\r\n        mask: '0 0000-0000',\r\n        lazy: false,\r\n        placeholderChar: ' '\r\n    };\r\n    return mask;\r\n}\r\n\r\n  static getImaskTelephone(language): any {\r\n    const mask = {\r\n        mask: '(00) 0000-0000',\r\n        lazy: false,\r\n        placeholderChar: '_'\r\n    };\r\n    switch (language) {\r\n        case 'pt':\r\n            break;\r\n        case 'en':\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return mask;\r\n  }\r\n\r\n  static getImaskTelephoneSemDDD(language): any {\r\n    const mask = {\r\n        mask: '0000-0000',\r\n        lazy: false,\r\n        placeholderChar: ' '\r\n    };\r\n    switch (language) {\r\n        case 'pt':\r\n            break;\r\n        case 'en':\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return mask;\r\n  }\r\n\r\n  static getMaskHourMinute(): any {\r\n    const mask = {\r\n        mask: '00:00:00',\r\n        lazy: false,\r\n        placeholderChar: ' '\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getMaskDate(): any {\r\n    const mask = {\r\n        mask: '00/00/0000',\r\n        lazy: false,\r\n        placeholderChar: ' '\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getMaskIp(): any {\r\n    const mask = {\r\n      mask: 'IP.IP.IP.IP',\r\n      blocks: {\r\n        IP: {\r\n          mask: '0[00]',\r\n          minLength: 1,\r\n          from: 1,\r\n          to: 255,\r\n        }\r\n      }\r\n    };\r\n    return mask;\r\n  }\r\n\r\n  static getMaskImai(): any {\r\n    const mask = {\r\n      mask: '000000-00-000000-0',\r\n      lazy: false,\r\n      placeholderChar: ' '\r\n\r\n    };\r\n    return mask;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport IMask from 'imask';\r\nimport { Mask } from '../mask/mask';\r\n\r\n@Pipe({\r\n    name: 'cpfCnpjFormat',\r\n    standalone: true\r\n})\r\nexport class CpfCnpjFormat implements PipeTransform {\r\n\r\n  maskCnpj = IMask.createMask(Mask.getMaskCnpj());\r\n  maskCpf = IMask.createMask(Mask.getMaskCpf());\r\n\r\n  transform(value: string) {\r\n    if (value.length === 11) {\r\n      this.maskCpf.resolve(value);\r\n      return this.maskCpf.value;\r\n    } else if (value.length === 14) {\r\n      this.maskCnpj.resolve(value);\r\n      return this.maskCnpj.value;\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\n    name: 'dateFormat',\n    standalone: true\n})\r\n  export class DateFormatPipe implements PipeTransform {\r\n    constructor(private translateService: TranslateService) {\r\n    }\r\n\r\n    transform(value: any, pattern: string = 'mediumDate'): any {\r\n      const datePipe: DatePipe = new DatePipe(this.translateService.currentLang);\r\n       return datePipe.transform(value, pattern);\r\n    }\r\n  }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\n    name: 'replaceNullWithText',\n    standalone: true\n})\r\nexport class ReplaceNullWithTextPipe implements PipeTransform {\r\n\r\n  transform(value: any, repleceText: string = 'N/A'): any {\r\n    if (typeof value === 'undefined' || value === null) {\r\n      return repleceText;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\n    name: 'safe',\n    standalone: true\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(protected _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  public transform(value: string, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html':\r\n        return this._sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style':\r\n        return this._sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script':\r\n        return this._sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url':\r\n        return this._sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl':\r\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default:\r\n        throw new Error(`Unable to bypass security for invalid type: ${type}`);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\n    name: 'utcDate',\n    standalone: true\n})\r\nexport class UtcDatePipe implements PipeTransform {\r\n\r\n  transform(value: string): any {\r\n\r\n    if (!value) {\r\n      return '';\r\n    }\r\n\r\n    const dateValue = new Date(value);\r\n\r\n    const dateWithNoTimezone = new Date(\r\n      dateValue.getUTCFullYear(),\r\n      dateValue.getUTCMonth(),\r\n      dateValue.getUTCDate(),\r\n      dateValue.getUTCHours(),\r\n      dateValue.getUTCMinutes(),\r\n      dateValue.getUTCSeconds()\r\n    );\r\n\r\n    return dateWithNoTimezone;\r\n  }\r\n}\r\n","import { SweetAlertOptions } from 'sweetalert2';\r\nimport Swal from 'sweetalert2';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AlertService {\r\n\r\n  translate = inject(TranslateService);\r\n\r\n  alertText(title: string, message: any, fnConfirm?: any, fnCancel?: any) {\r\n\r\n    Swal.fire({\r\n      title: title,\r\n      text: message,\r\n      icon: 'success',\r\n      confirmButtonColor: '#0CC27E',\r\n      confirmButtonText: '<i class=\"ft-check-circle\"></i> ' + this.translate.instant('OK')\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        fnConfirm();\r\n      } else if (fnCancel !== undefined) {\r\n        fnCancel();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  confirmText(title: string, message: any, fnConfirm?: any, fnCancel?: any) {\r\n    let mensagem = '';\r\n    let params = {};\r\n    if (message instanceof Array) {\r\n      mensagem = message[0];\r\n      params = message[1];\r\n    } else {\r\n      mensagem = message;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: title,\r\n      text: mensagem,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#0CC27E',\r\n      cancelButtonColor: '#FF586B',\r\n      confirmButtonText: '<i class=\"ft-check-circle\"></i> ' + this.translate.instant('SIM'),\r\n      cancelButtonText: '<i class=\"ft-x-circle\"></i> ' + this.translate.instant('NAO'),\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        fnConfirm();\r\n      } else if (fnCancel !== undefined) {\r\n        fnCancel();\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmTextResetPassword(fnConfirm?: any, fnCancel?: any) {\r\n\r\n    const swal: SweetAlertOptions = {\r\n      title: this.translate.instant('RESETAR_SENHA'),\r\n      text: this.translate.instant('DIGITE_CODIGO_AUTENTICACAO'),\r\n      icon: 'info',\r\n      input: 'text',\r\n      inputValidator: (value) => {\r\n        return !value && this.translate.instant('CAMPO_OBRIGATORIO')\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#0CC27E',\r\n      cancelButtonColor: '#FF586B',\r\n      cancelButtonText: '<i class=\"ft-x\"></i> ' + this.translate.instant('CANCELAR'),\r\n      confirmButtonText: '<i class=\"ft-check\"></i> ' + this.translate.instant('OK'),\r\n    };\r\n\r\n    Swal.fire(swal).then((result) => {\r\n      if (result.value) {\r\n        fnConfirm(result.value);\r\n      } else if (fnCancel !== undefined) {\r\n        fnCancel();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Renderer2, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\nimport Scrollbar from 'smooth-scrollbar';\r\n\r\n@Directive({\n    selector: '[appSlimScroll]',\n    standalone: true\n})\r\nexport class SlimscrollDirective implements AfterViewInit {\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n  ngAfterViewInit() {\r\n    // smooth scroll\r\n    Scrollbar.init(this.el.nativeElement);\r\n  }\r\n\r\n}\r\n","import { inject, Injectable, Signal, signal } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TranslationService {\r\n\r\n  private http = inject(HttpClient);\r\n  private translations: { [key: string]: string } = {};\r\n\r\n  // Signal para o idioma atual\r\n  private languageSignal = signal<string>('pt-BR'); // Define o idioma padrão como inglês\r\n\r\n  // Getter para o signal, para que o pipe e componentes possam usá-lo\r\n  get currentLanguage(): Signal<string> {\r\n    return this.languageSignal;\r\n  }\r\n\r\n  get currentLang() {\r\n    return this.languageSignal();\r\n  }\r\n\r\n  constructor() {\r\n    this.loadTranslations(this.languageSignal());\r\n  }\r\n\r\n  use(lang: string): void {\r\n    this.languageSignal.set(lang); // Atualiza o Signal\r\n    this.loadTranslations(lang);   // Carrega novas traduções\r\n  }\r\n\r\n  // Retorna uma string traduzida com base na chave\r\n  getTranslation(key: string, params?: any): string {\r\n    let translation = this.translations[key] || key; // Retorna a chave se a tradução não for encontrada\r\n\r\n    // Substituir parâmetros dinâmicos, se houver\r\n    if (params) {\r\n      Object.keys(params).forEach((param) => {\r\n        translation = translation.replace(`{{${param}}}`, params[param]);\r\n      });\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  instant(key: string, params?: any): string {\r\n    return this.getTranslation(key, params);\r\n  }\r\n\r\n  private loadTranslations(lang: string): void {\r\n    this.http\r\n      .get<{ [key: string]: string }>(`assets/i18n/${lang}.json`)\r\n      .subscribe((translations) => {\r\n        this.translations = translations;\r\n      });\r\n  }\r\n\r\n  getBrowserLang(){\r\n    return window.navigator.language;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, effect, inject } from '@angular/core';\r\nimport { TranslationService } from './translation.service';\r\n\r\n@Pipe({\r\n  name: 'translate',\r\n  standalone: true,\r\n  pure: false\r\n})\r\nexport class TranslationPipe implements PipeTransform {\r\n\r\n  private translationService = inject(TranslationService);\r\n  private translatedText = ''; // Armazena a tradução atual\r\n\r\n  constructor() {\r\n    // Recalcula a tradução sempre que o idioma mudar\r\n    effect(() => {\r\n      const lang = this.translationService.currentLanguage(); // Observa o Signal\r\n      this.translatedText = this.translationService.instant(this.currentKey);\r\n    });\r\n  }\r\n\r\n  private currentKey: string = ''; // Variável para armazenar a chave atual\r\n\r\n  transform(key: string): string {\r\n    // Atualizamos a chave de tradução atual\r\n    this.currentKey = key;\r\n    // Obtém a tradução atual\r\n    return this.translationService.instant(key);\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of shared-utils\r\n */\r\n\r\nexport * from './lib/pipes/cpf-cnpj-format.pipe';\r\nexport * from './lib/pipes/date-format.pipe';\r\nexport * from './lib/pipes/replace-null-with-text.pipe';\r\nexport * from './lib/pipes/safe.pipe';\r\nexport * from './lib/pipes/utcDate.pipe';\r\nexport * from './lib/mask/mask';\r\nexport * from './lib/services/alert.service';\r\nexport * from './lib/directives/slimscroll.directive';\r\nexport * from './lib/translation/translation.pipe';\r\nexport * from './lib/translation/translation.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}